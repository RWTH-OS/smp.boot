
            Compiling problems with GCC <= 4.4
            ==================================

INTRO
-----

On GCC 4.4 (reproducible on Bartrax with Fedora 11), the kernel is built
without warnings but the 64 bit version does not boot (in QEmu and on real
hardware, the processor reboots). Detailed analysis showed, that the jump to Realm32
was not successful (a 'hlt' before succeeded, immediately after the jump,
the CPU reboots). 

Further analysis reveals, that the 64 bit code from kernel64.section is
not located at the address 0x140000 (as given in link_start64.ld), but
immediately after the startup code (e.g. 0x103004).

Built on Poodoo:

> wassen@poodoo:~/checkout/mcert/misc/baremetal/multiboot$ readelf -S kernel64.bin
> There are 13 section headers, starting at offset 0x1009c:
> 
> Section Headers:
>   [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
>   [ 0]                   NULL            00000000 000000 000000 00      0   0  0
>   [ 1] .text             PROGBITS        00100000 001000 001af5 00  AX  0   0 16
>   [ 2] .rodata           PROGBITS        00102000 003000 00003c 00   A  0   0 32
>   [ 3] .rodata.str1.1    PROGBITS        0010203c 00303c 0000f9 01 AMS  0   0  1
>   [ 4] .rodata.str1.4    PROGBITS        00102138 003138 0003c8 01 AMS  0   0  4
>   [ 5] .eh_frame         PROGBITS        00102500 003500 000340 00   A  0   0  4
>   [ 6] .data             PROGBITS        00103000 004000 000004 00  WA  0   0  4
>   [ 7] .bss              NOBITS          00103004 004004 004004 00  WA  0   0  4
>   [ 8] .KERNEL64         PROGBITS        00140000 005000 00b000 00  WA  0   0  1
>   [ 9] .comment          PROGBITS        00000000 010000 00002c 01  MS  0   0  1
>   [10] .shstrtab         STRTAB          00000000 01002c 00006f 00      0   0  1
>   [11] .symtab           SYMTAB          00000000 0102a4 000400 10     12  35  4
>   [12] .strtab           STRTAB          00000000 0106a4 0001ba 00      0   0  1
> Key to Flags:
>   W (write), A (alloc), X (execute), M (merge), S (strings)
>   I (info), L (link order), G (group), T (TLS), E (exclude), x (unknown)
>   O (extra OS processing required) o (OS specific), p (processor specific)

The Section .KERNEL64 (pos. 8) is at Addr 0x140000.

Built on Bartrax:

> wassen@poodoo:~/checkout/mcert/misc/baremetal/multiboot$ readelf -S kernel64.bin
> There are 12 section headers, starting at offset 0xf110:
> 
> Section Headers:
>   [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
>   [ 0]                   NULL            00000000 000000 000000 00      0   0  0
>   [ 1] .text             PROGBITS        00100000 001000 001b09 00  AX  0   0 16
>   [ 2] .rodata           PROGBITS        00102000 003000 000040 00   A  0   0 32
>   [ 3] .rodata.str1.4    PROGBITS        00102040 003040 0003c8 01 AMS  0   0  4
>   [ 4] .rodata.str1.1    PROGBITS        00102408 003408 0000f4 01 AMS  0   0  1
>   [ 5] .data             PROGBITS        00103000 004000 000004 00  WA  0   0  4
>   [ 6] .KERNEL64         PROGBITS        00103004 004004 00b000 00  WA  0   0  1
>   [ 7] .bss              NOBITS          0010e004 00f004 004004 00  WA  0   0  4
>   [ 8] .comment          PROGBITS        00000000 00f004 0000a6 00      0   0  1
>   [ 9] .shstrtab         STRTAB          00000000 00f0aa 000065 00      0   0  1
>   [10] .symtab           SYMTAB          00000000 00f2f0 000400 10     11  35  4
>   [11] .strtab           STRTAB          00000000 00f6f0 0001c5 00      0   0  1
> Key to Flags:
>   W (write), A (alloc), X (execute), M (merge), S (strings)
>   I (info), L (link order), G (group), T (TLS), E (exclude), x (unknown)
>   O (extra OS processing required) o (OS specific), p (processor specific)

Here, the Section .KERNEL64 (pos. 6) is not located correctly.

Other command: objdump -h kernel64.bin


FIX
---

Added the line
>   *(.KERNEL64)
to the Section .KERNEL64 (before, only (.text) was there). Now, the section is
on both Poodoo and Bartrax on the correct Address.
QEmu kernel64 -> works (after compiling on Bartrax with GCC 4.4)
Bare Metal    -> works, too.

fixed, closed.

